<?xml version="1.0" encoding="UTF-8"?>
  <beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	xmlns:context="http://www.springframework.org/schema/context"
	
	xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd">

	<import resource="classpath:META-INF/cxf/cxf.xml" />
	<import resource="classpath:META-INF/cxf/cxf-servlet.xml" />  
	<import resource="classpath:META-INF/cxf/cxf-extension-policy.xml"/>   
 
   
    <jaxws:endpoint
            id="contactServiceEndPoint"
            implementor="#contactSEIImpl"
            address="/Contact">
            
     <jaxws:properties> 
              		 <entry key="mtom-enabled" value="true"/>
              </jaxws:properties> 
              <jaxws:inInterceptors> 
                    <bean id="wSS4JInInterceptor"  class="org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor"> 
 						<constructor-arg> 
 						<map> 
  							<entry key="action" value="UsernameToken" /> 
	 						<entry key="passwordType"  value="PasswordDigest" /> 
 							<entry  key="passwordCallbackRef"> 
  									<ref  bean="serverCallback" /> 
   							</entry>
       					</map>
      					</constructor-arg> 
					</bean>
                   </jaxws:inInterceptors> 
               
                   
       </jaxws:endpoint>    
             <!-- Custom Security handler implementing javax.security.auth.callback.CallbackHandler interface  -->
           <!--  <jaxws:properties>
    		          <entry key="ws-security.callback-handler"  value="net.hitesh.webservice.security.ServerCallback"/>  
    		          <entry key="ws-security.signature.properties" value="serviceKeystore.properties"/>
    		          <entry key="ws-security.encryption.properties" value="serviceKeystore.properties"/>        
    		          <entry key="ws-security.encryption.username"  value="useReqSigCert"/>
   			 </jaxws:properties> 
   			  -->
            <!-- Of special note is the useReqSigCert value for the encryptionUser parameter in the WSS4JOutInterceptor above. 
            When this value is used instead of a specific client key alias, it tells the service to use the same key that was used to sign the SOAP request.
             This allows the service to handle any client whose public key is in the service's truststore. -->

    
<!--   <bean id="serverPasswordCallback"  class="net.hitesh.webservice.security.ServerCallback" />  -->

 
         
 <jaxrs:server id="contactRestSEI" address="/rest">
        <jaxrs:serviceBeans>
        <ref bean="contactRestSEIImpl" />
        </jaxrs:serviceBeans>
    </jaxrs:server>
    
    <!-- <bean id ="contactRest" class="net.hitesh.webservice.REST.service.impl.ContactRestSEIImpl"/> -->
     
</beans>
    